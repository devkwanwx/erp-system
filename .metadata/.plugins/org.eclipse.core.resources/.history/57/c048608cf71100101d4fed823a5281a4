package com.kwanwx.erp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kwanwx.erp.mapper.InventoryMapper;
import com.kwanwx.erp.model.Inventory;
import com.kwanwx.erp.service.InventoryService;

@RestController
@RequestMapping("/inventories")
public class InventoryController {

	private final InventoryService inventoryService;
	
	@Autowired
	public InventoryController(InventoryService inventoryService) {
		this.inventoryService = inventoryService;
	}
	
	// 재고 등록
	@PostMapping("/register")
	public ResponseEntity<String> registerInventory(@RequestBody Inventory inventory) {
		inventoryService.registerInventory(inventory);
		
		return ResponseEntity.ok("재고 등록이 완료되었습니다.");
	}
	
	// 단일 재고 조회
	@GetMapping("/{inventoryId}")
	public ResponseEntity<String> getInventory(@PathVariable String inventoryId) {
		Inventory inventory = inventoryService.getInventoryById(inventoryId);
		
		if (inventory != null) {
			return ResponseEntity.ok(inventory);
		}
		
		return ResponseEntity.notFound().build();
	}
	
	//전체 재고 조회
	@GetMapping
	public ResponseEntity<List<Inventory>> getAllInventories() {
		List<Inventory> inventories = inventoryService.getAlInventories();
		
		return ResponseEntity.ok(inventories);
	}
	
	// 재고 정보 수정
	@PutMapping("/{inventoryId}")
	public ResponseEntity<String> updateInventory(@PathVariable String inventoryId, @RequestBody Inventory inventory) {
		inventory.setInventoryId(inventoryId);
		inventoryService.updateInventory(inventory);
		
		return ResponseEntity.ok("재고 정보 수정이 완료되었습니다."); 
	}
	
	// 재고 삭제
	@DeleteMapping("/{inventoryId}")
	public ResponseEntity<String> deleteInventory(@PathVariable String inventoryId) {
		inventoryService.deleteInventory(inventoryId);
		
		return ResponseEntity.ok("재고 삭제가 완료되었습니다.");
	}
}





