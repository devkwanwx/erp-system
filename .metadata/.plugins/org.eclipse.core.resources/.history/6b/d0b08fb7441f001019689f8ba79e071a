package com.kwanwx.erp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.github.pagehelper.PageInfo;
import com.kwanwx.erp.dto.ApiResponse;
import com.kwanwx.erp.model.Accounting;
import com.kwanwx.erp.model.Supplier;
import com.kwanwx.erp.service.SupplierService;

@RestController
@RequestMapping("/suppliers")
public class SupplierController {

	private final SupplierService supplierService;
	
	@Autowired
	public SupplierController(SupplierService supplierService) {
		this.supplierService = supplierService;
	}
	
	@PostMapping("/register")
	public ResponseEntity<ApiResponse<Supplier>> registerSupplier(@RequestBody Supplier supplier) {
		supplierService.registerSupplier(supplier);
		
		return ResponseEntity.ok(ApiResponse.of(supplier));
	}
	
	@GetMapping("/{supplierId}")
	public ResponseEntity<ApiResponse<Supplier>> getSupplier(@PathVariable String supplierId) {
		Supplier supplier = supplierService.getSupplierById(supplierId);
		
		if (supplier != null) {
			return ResponseEntity.ok(ApiResponse.of(supplier));
		}
		
		return ResponseEntity
				.status(HttpStatus.NOT_FOUND)
				.body(ApiResponse.error("공급업체를 찾을 수 없습니다."));
	}
	
	@GetMapping
	public ResponseEntity<ApiResponse<PageInfo<Supplier>>> getAllSuppliers(@RequestParam(defaultValue = "1") int page,
			@RequestParam(defaultValue = "10") int size, @RequestParam(defaultValue = "employeeId, asc") String sort) {
		PageInfo<Supplier> suppliers = supplierService.getAllSuppliers(page, size, sort);
		
		return ResponseEntity.ok(ApiResponse.of(suppliers));
	}
	
	@PutMapping("/{supplierId}")
    public ResponseEntity<ApiResponse<Supplier>> updateSupplier(@PathVariable String supplierId, @RequestBody Supplier supplier) {
        supplier.setSupplierId(supplierId);
        supplierService.updateSupplier(supplier);
        
        return ResponseEntity.ok(ApiResponse.of(supplier));
    }

    @DeleteMapping("/{supplierId}")
    public ResponseEntity<ApiResponse<Void>> deleteSupplier(@PathVariable String supplierId) {
        supplierService.deleteSupplier(supplierId);
        
        return ResponseEntity.ok(ApiResponse.of(null));
    }
}
