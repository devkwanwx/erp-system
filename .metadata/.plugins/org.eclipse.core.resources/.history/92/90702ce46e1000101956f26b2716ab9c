package com.kwanwx.erp.util;

import java.util.Date;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.security.Keys;
import java.security.Key;

public class JwtUtil {

	// 비밀 키
//	private static final Key SECRET_KEY = Keys.secretKeyFor(SignatureAlgorithm.HS256); // 서버 재시작 시 새로운 키 생성
	private static final String SECRET = "0123456789abcdef0123456789abcdef"; 
	private static final Key SECRET_KEY = Keys.hmacShaKeyFor(SECRET.getBytes());
	
	// 토큰 유효 시간(1시간)
	private static final long EXPIRATION_TIME = 60 * 60 * 1000;
	
	// JWT 토큰 생성
	public static String generateToken(String userName) {
		return Jwts.builder()
				.setSubject(userName)
				.setIssuedAt(new Date())
				.setExpiration(new Date(System.currentTimeMillis() + EXPIRATION_TIME))
				.signWith(SECRET_KEY, SignatureAlgorithm.HS256)
				.compact();
	}
	
	// 토큰에서 사용자 이름 추출
	public static String extractUserName(String token) {
		
		return getClaims(token).getSubject();
	}
	
	// 토큰 유효성 검증
	public static boolean validateToken(String token, String userName) {
		String extractedUserName = extractUserName(token);
		
		return (extractedUserName.equals(userName) && !isTokenExpired(token));
	}

	private static boolean isTokenExpired(String token) {
		Date expiration = getClaims(token).getExpiration();
		
		return expiration.before(new Date());
	}

	private static Claims getClaims(String token) {
		
		return Jwts.parserBuilder()
				.setSigningKey(SECRET_KEY)
				.build()
				.parseClaimsJws(token)
				.getBody();
	}
}
